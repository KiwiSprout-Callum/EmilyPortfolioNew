---
import Arrow45Deg from "./icons/Arrow45Deg.astro";
const {
  text = "Click Me",
  href = null,
  color = "#141414",
  bg= "#E4FF35",
  clickColor = "#CAE423",
  isFullWidth = false,
  noIcon = false,
  isHref = true,
  id = "",
  target=""
} = Astro.props;

const isFullWidthClass = isFullWidth ? "100%" : "fit-content";
---
{isHref && href ? 
<a 
 id={id}
href={href}
target={target}
class={`btn rounded-[32px]  btn-text  leading-none w-full flex gap-2.5 items-center ${Astro.props.class}`}
>
{text}
{!noIcon && <div class="icon"><Arrow45Deg /></div>}
</a>
:
<div
  id={id}
  class={`btn rounded-[32px]  btn-text  leading-none w-full flex gap-2.5 items-center ${Astro.props.class}`}
>
{text}
{!noIcon && <div class="icon"><Arrow45Deg /></div>}
</div>
}

<style is:global define:vars={{
  clickColor,
  color,
  bg,
  isFullWidthClass
}}>
.btn {
  transition:all 0.3s ease;
  cursor: pointer;
  color: var(--color);
  background: var(--bg);
  width: var(--isFullWidthClass);
}
.btn .icon{

  transition:all 0.3s ease;
}
.btn:hover{
  box-shadow: 0px 0px 17.4px 0.75px #FFFFFF inset, 0px 0px 25.3px 0.75px var(--bg) ;
}
.btn:hover .icon{
  transform: rotate(45deg);
}
.btn:active{
  background-color: var(--clickColor);
  box-shadow:  0px 0px 17.4px 0.75px #FFFFFF inset;
}
</style>